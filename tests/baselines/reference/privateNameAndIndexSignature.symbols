=== tests/cases/conformance/classes/members/privateNames/privateNameAndIndexSignature.ts ===
// @target es6

class A {
>A : Symbol(A, Decl(privateNameAndIndexSignature.ts, 0, 0))

    [k: string]: any;
>k : Symbol(k, Decl(privateNameAndIndexSignature.ts, 3, 5))

    #foo = 3;
>#foo : Symbol(A.#foo, Decl(privateNameAndIndexSignature.ts, 3, 21))

    ["#bar"] = this["#bar"]   // Error (private identifiers should not prevent circularity checking for computeds)
>["#bar"] : Symbol(A["#bar"], Decl(privateNameAndIndexSignature.ts, 4, 13))
>"#bar" : Symbol(A["#bar"], Decl(privateNameAndIndexSignature.ts, 4, 13))
>this : Symbol(A, Decl(privateNameAndIndexSignature.ts, 0, 0))
>"#bar" : Symbol(A["#bar"], Decl(privateNameAndIndexSignature.ts, 4, 13))

    constructor(message: string) {
>message : Symbol(message, Decl(privateNameAndIndexSignature.ts, 6, 16))

        this.#f = 3           // Error (index signatures do not implicitly declare private names)
>this : Symbol(A, Decl(privateNameAndIndexSignature.ts, 0, 0))

        this["#foo"] = 3;     // Error: property not declared (cannot use index signature to access private name)
>this : Symbol(A, Decl(privateNameAndIndexSignature.ts, 0, 0))

    }
}

