=== tests/cases/conformance/classes/members/privateNames/privateNamesUnique-3.ts ===
class Parent {
>Parent : Parent

    #x;
>#x : any

    copy(child: Child) {
>copy : (child: Child) => void
>child : Child

        this.#x = child.#x; // OK (Sub has Super's #x)
>this.#x = child.#x : any
>this.#x : any
>this : this
>child.#x : any
>child : Child
    }
}

class Child extends Parent {
>Child : Child
>Parent : Parent

    #x; // OK (Child #x lexically shadows Super's #x)
>#x : any
}

const parent = new Parent();
>parent : Parent
>new Parent() : Parent
>Parent : typeof Parent

const child = new Child();
>child : Child
>new Child() : Child
>Child : typeof Child

parent.copy(child); // OK
>parent.copy(child) : void
>parent.copy : (child: Child) => void
>parent : Parent
>copy : (child: Child) => void
>child : Child


export default 3;

