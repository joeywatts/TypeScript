tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(2,12): error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(3,18): error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(4,19): error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(7,5): error TS18019: 'static' modifier cannot be used with a private-named field. This feature may be supported in a future release
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(8,16): error TS18023: An accessor cannot have a private identifier. This feature may be supported in a future release.
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(11,16): error TS18023: An accessor cannot have a private identifier. This feature may be supported in a future release.
tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts(24,12): error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.


==== tests/cases/conformance/classes/members/privateNames/privateNamesAndStaticMethods.ts (7 errors) ====
    class A {
        static #foo(a: number) {}
               ~~~~
!!! error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
        static async #bar(a: number) {}
                     ~~~~
!!! error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
        static async *#baz(a: number) {
                      ~~~~
!!! error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
            return 3;
        }
        static #_quux: number;
        ~~~~~~
!!! error TS18019: 'static' modifier cannot be used with a private-named field. This feature may be supported in a future release
        static get #quux (): number {
                   ~~~~~
!!! error TS18023: An accessor cannot have a private identifier. This feature may be supported in a future release.
            return this.#_quux;
        }
        static set #quux (val: number) {
                   ~~~~~
!!! error TS18023: An accessor cannot have a private identifier. This feature may be supported in a future release.
            this.#_quux = val; 
        }
        constructor () {
            A.#foo(30);
            A.#bar(30);
            A.#bar(30);
            A.#quux = A.#quux + 1;
            A.#quux++;
     }
    }
    
    class B extends A {
        static #foo(a: string) {}
               ~~~~
!!! error TS18022: A method cannot have a private identifier. This feature may be supported in a future release.
        constructor () {
            super();
            B.#foo("str");
        }
    }
    